{
    "snippets": [
        {
          "id": "1",
          "title": "Basic React Component",
          "description": "A simple functional component in React",
          "language": "TypeScript",
          "tags": ["react", "component", "beginner"],
          "code": "import React from 'react';\n\nconst HelloWorld: React.FC = () => {\n  return <h1>Hello, world!</h1>;\n};\n\nexport default HelloWorld;",
          "createdAt": "2024-07-23T12:00:00Z",
          "updatedAt": "2024-07-23T12:00:00Z"
        },
        {
          "id": "2",
          "title": "Angular Service",
          "description": "A basic Angular service to fetch data",
          "language": "TypeScript",
          "tags": ["angular", "service", "http"],
          "code": "import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n  private apiUrl = 'https://api.example.com/data';\n\n  constructor(private http: HttpClient) {}\n\n  getData(): Observable<any> {\n    return this.http.get(this.apiUrl);\n  }\n}",
          "createdAt": "2024-07-23T12:10:00Z",
          "updatedAt": "2024-07-23T12:10:00Z"
        },
        {
          "id": "3",
          "title": "React State Hook",
          "description": "Using useState hook in React",
          "language": "TypeScript",
          "tags": ["react", "hook", "state"],
          "code": "import React, { useState } from 'react';\n\nconst Counter: React.FC = () => {\n  const [count, setCount] = useState(0);\n\n  return (\n    <div>\n      <p>You clicked {count} times</p>\n      <button onClick={() => setCount(count + 1)}>Click me</button>\n    </div>\n  );\n};\n\nexport default Counter;",
          "createdAt": "2024-07-23T12:20:00Z",
          "updatedAt": "2024-07-23T12:20:00Z"
        },
        {
          "id": "4",
          "title": "Angular Component",
          "description": "A simple Angular component",
          "language": "TypeScript",
          "tags": ["angular", "component", "beginner"],
          "code": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-hello-world',\n  template: '<h1>Hello, world!</h1>',\n})\nexport class HelloWorldComponent {}",
          "createdAt": "2024-07-23T12:30:00Z",
          "updatedAt": "2024-07-23T12:30:00Z"
        },
        {
          "id": "5",
          "title": "React Effect Hook",
          "description": "Using useEffect hook in React",
          "language": "TypeScript",
          "tags": ["react", "hook", "effect"],
          "code": "import React, { useEffect, useState } from 'react';\n\nconst DataFetcher: React.FC = () => {\n  const [data, setData] = useState(null);\n\n  useEffect(() => {\n    fetch('https://api.example.com/data')\n      .then(response => response.json())\n      .then(data => setData(data));\n  }, []);\n\n  return (\n    <div>\n      <pre>{JSON.stringify(data, null, 2)}</pre>\n    </div>\n  );\n};\n\nexport default DataFetcher;",
          "createdAt": "2024-07-23T12:40:00Z",
          "updatedAt": "2024-07-23T12:40:00Z"
        },
        {
          "id": "6",
          "title": "Angular Form Control",
          "description": "Creating a form control in Angular",
          "language": "TypeScript",
          "tags": ["angular", "form", "control"],
          "code": "import { Component } from '@angular/core';\nimport { FormControl } from '@angular/forms';\n\n@Component({\n  selector: 'app-my-form',\n  template: '<input [formControl]=\"nameControl\">',\n})\nexport class MyFormComponent {\n  nameControl = new FormControl('');\n}",
          "createdAt": "2024-07-23T12:50:00Z",
          "updatedAt": "2024-07-23T12:50:00Z"
        },
        {
          "id": "7",
          "title": "React Context",
          "description": "Creating and using React Context",
          "language": "TypeScript",
          "tags": ["react", "context", "state management"],
          "code": "import React, { createContext, useContext, useState } from 'react';\n\nconst MyContext = createContext(null);\n\nconst MyProvider: React.FC = ({ children }) => {\n  const [value, setValue] = useState('Hello, Context!');\n\n  return (\n    <MyContext.Provider value={{ value, setValue }}>\n      {children}\n    </MyContext.Provider>\n  );\n};\n\nconst MyComponent: React.FC = () => {\n  const { value } = useContext(MyContext);\n\n  return <p>{value}</p>;\n};\n\nexport { MyProvider, MyComponent };",
          "createdAt": "2024-07-23T13:00:00Z",
          "updatedAt": "2024-07-23T13:00:00Z"
        },
        {
          "id": "8",
          "title": "Angular Routing",
          "description": "Basic routing setup in Angular",
          "language": "TypeScript",
          "tags": ["angular", "routing", "navigation"],
          "code": "import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { HomeComponent } from './home/home.component';\nimport { AboutComponent } from './about/about.component';\n\nconst routes: Routes = [\n  { path: '', component: HomeComponent },\n  { path: 'about', component: AboutComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {}",
          "createdAt": "2024-07-23T13:10:00Z",
          "updatedAt": "2024-07-23T13:10:00Z"
        },
        {
          "id": "9",
          "title": "React Router",
          "description": "Basic routing setup in React",
          "language": "TypeScript",
          "tags": ["react", "router", "navigation"],
          "code": "import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Home from './Home';\nimport About from './About';\n\nconst App: React.FC = () => {\n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/\" component={Home} />\n        <Route path=\"/about\" component={About} />\n      </Switch>\n    </Router>\n  );\n};\n\nexport default App;",
          "createdAt": "2024-07-23T13:20:00Z",
          "updatedAt": "2024-07-23T13:20:00Z"
        }
    ]
}